// Define the size of the arrays
#define NUM_MOTOR 5
///////DEBUG////////
bool DEBUG = false;
bool DEV = 1;
int test_motor_n = 0;
int print_Counter = 0;
//int Print_Motor_Number = 0;
float Print_desired_current[NUM_MOTOR] = { 0 };

/*
if (DEBUG == 1){


    Serial.print("debug");
    Serial.println(duty_cycle);
}
*/


// PWMPIN arrays
int PWMPINR[NUM_MOTOR] = { 33, 26, 14, 13, 2 };  //{ 33, 26, 14, 13, 2 };
int PWMPINL[NUM_MOTOR] = { 25, 27, 12, 4, 15 };  //{ 25, 27, 12, 4, 15 };

// PWMCHN arrays
int PWMCHNR[NUM_MOTOR] = { 0, 2, 4, 6, 8 };
int PWMCHNL[NUM_MOTOR] = { 1, 3, 5, 7, 9 };

// R_EN and L_EN arrays
int R_EN[NUM_MOTOR] = { 5, 5, 5, 5, 5 };
int L_EN[NUM_MOTOR] = { 18, 18, 18, 18, 18 };

// CURSENS array
int CURSENS[NUM_MOTOR] = { 36, 39, 34, 35, 32 };  //{ 36, 39, 34, 35, 32 }

///////////CONSTANTS///////////
const float kt = 77;  //64.8; ;//59.8; //62.9; //77;  //Motor torque constant for current torque conversion 77.0442

const float kh = 1.8;  //2.184; // h-bridge constant, this mean the desired current is X2 when detected

const float max_cur = 43;  // The supply current in amps

const float max_out_pwm = 255.0;  // Maximum output current for 8 bit to PWM max (255)
const float pwm_limit = 100.0;


float detected_current[NUM_MOTOR];
float pid_current[NUM_MOTOR];

//////////PID///////////
/*
const float Kp = 0.019739746799967;  // Proportional gain
const float Ki = 3.94794935999339;   // Integral gain
const float Kd = 0;                  // Derivative gain
float integral[NUM_MOTOR];
float last_error[NUM_MOTOR];
*/
////////////PID//////////

const float Kp = 0.0065360021791939;   // Proportional gain
const float Ki = 1.30720043583878;   // Integral gain
const float Kd = 0;  // Derivative gain
const float Kn = 100;    // the N coefecient or dreivative filtercoeffeient

// PID CONTROLLER:
// Kp = 0.225325958396314
// Ki = 2.72535925041695
// Kd = -0.09835834825468
// N = 2.29086765276777

float integral[NUM_MOTOR] = {0.0};
float last_error[NUM_MOTOR] = {0.0};



///////////PWM////////

const int frequence = 20000;  // PWM frequency of 1 KHz // max for stable frq, is 300kHz
const int resolution = 8;     // 16-bit resolution, 65,536 possible values

////////////////////SERIAL PARSER///////
const byte numChars = 32;
char receivedChars[numChars];
char tempChars[numChars];
boolean newData = false;
int wn = 0;

//////////Traj////////
const int trajectory_size = 1;                     // Length of each batch of received force trajectories
const int buffer_size = 5 * trajectory_size;         // Length of the sent data
float receivedArray[2 * buffer_size];                // Combined array of received wire force trajectories [motor1, motor2, motor3, motor4, motor5, motor1...]
float desired_trajectory[5][trajectory_size];        // Force trajectories for the motors
float desired_wire_vel[5][trajectory_size];          // Wire velocity trajectories for the motors
uint8_t byteArray[2 * buffer_size * sizeof(float)];  // Array of bytes to receive the serial data into
const int wifi_sampling_interval = 1000000;          // Sampling interval for wifi communication (in microseconds)
unsigned long last_wifi_sampling_time = 0;

/////////OVERFLOWCHECKER/////

float last_desired_trajectory = 0;
float last_velocety_trajectory = 0;


////moving average///////
const int numSamples = 100;                       // number of samples to take for moving average
float sampleArray[NUM_MOTOR][numSamples];         // array to store the samples
int currentIndex[NUM_MOTOR] = { 0, 0, 0, 0, 0 };  // current index of the array
float moving_avg_cur[NUM_MOTOR];                  // current moving average
float sensor_cur = 0;

///////THIS IS ADC LOOK UP TABLE//

const float ADC_LUT[4096] = { 0,
26.0000,34.2000,37.2000,40.0000,43.0000,46.0000,48.6000,49.6000,50.6000,51.6000,52.6000,53.6000,54.6000,55.6000,56.6000,
57.4000,58.4000,59.4000,60.4000,61.4000,62.4000,63.4000,64.4000,65.8000,66.8000,68.0000,69.2000,70.6000,71.8000,72.8000,
74.0000,75.2000,76.6000,77.8000,79.0000,80.0000,81.4000,82.8000,83.8000,85.0000,86.4000,87.8000,89.0000,90.0000,91.4000,
92.8000,94.0000,95.0000,96.4000,97.2000,98.0000,99.0000,100.0000,101.0000,101.8000,102.8000,103.8000,104.8000,105.6000,106.6000,
107.4000,108.2000,109.0000,110.0000,111.0000,112.0000,113.0000,114.0000,115.0000,116.0000,117.2000,118.4000,119.4000,120.6000,121.8000,
122.8000,123.8000,124.8000,125.8000,127.0000,128.0000,129.0000,130.2000,131.4000,132.6000,133.8000,134.8000,135.8000,137.0000,138.0000,
139.0000,140.4000,141.6000,142.8000,143.8000,145.0000,146.2000,147.8000,149.0000,150.2000,151.8000,153.0000,154.0000,155.8000,156.8000,
158.0000,159.6000,160.8000,161.8000,162.6000,163.4000,164.4000,165.2000,166.0000,167.0000,168.0000,169.0000,170.0000,170.8000,171.8000,
172.8000,173.8000,174.8000,175.8000,176.8000,177.8000,178.8000,180.0000,181.0000,182.0000,183.4000,184.6000,185.8000,186.8000,187.8000,
189.0000,190.0000,191.2000,192.6000,193.8000,195.0000,196.2000,197.8000,199.0000,200.0000,201.6000,202.8000,204.0000,205.4000,206.8000,
208.0000,209.0000,210.0000,211.0000,212.0000,213.0000,214.0000,215.0000,216.0000,217.0000,218.0000,219.0000,220.0000,221.0000,222.0000,
223.0000,224.0000,225.2000,226.4000,227.8000,228.8000,229.8000,231.0000,232.0000,233.0000,234.2000,235.4000,236.8000,237.8000,238.8000,
240.0000,240.8000,241.8000,242.6000,243.2000,244.0000,245.0000,245.8000,246.8000,247.6000,248.2000,249.0000,250.0000,250.8000,251.8000,
252.6000,253.2000,254.0000,255.0000,255.8000,257.0000,258.8000,260.8000,262.2000,264.0000,265.8000,267.8000,269.4000,271.0000,272.6000,
273.4000,274.0000,275.0000,275.8000,276.8000,277.6000,278.2000,279.0000,280.0000,280.8000,281.8000,282.6000,283.2000,284.0000,285.0000,
285.8000,286.8000,287.6000,288.4000,289.8000,291.0000,292.4000,293.8000,295.0000,296.6000,297.8000,299.0000,300.6000,301.8000,303.0000,
304.8000,306.0000,307.8000,309.4000,311.0000,312.8000,314.2000,315.8000,317.6000,319.0000,320.4000,321.2000,322.0000,323.0000,323.8000,
324.8000,325.4000,326.2000,327.0000,328.0000,328.8000,329.8000,330.4000,331.2000,332.0000,333.0000,333.8000,334.8000,335.4000,336.2000,
337.4000,338.6000,339.8000,340.8000,341.8000,343.0000,344.0000,345.0000,346.0000,347.2000,348.4000,349.6000,350.8000,351.8000,352.8000,
353.8000,354.8000,355.8000,356.8000,357.6000,358.6000,359.6000,360.4000,361.4000,362.4000,363.2000,364.2000,365.0000,366.0000,367.0000,
368.0000,369.8000,371.2000,373.0000,374.8000,376.0000,377.8000,379.6000,381.0000,382.8000,384.2000,385.0000,385.8000,386.4000,387.0000,
387.8000,388.6000,389.0000,389.8000,390.8000,391.2000,392.0000,392.8000,393.4000,394.0000,394.8000,395.6000,396.0000,396.8000,397.8000,
398.2000,399.0000,399.8000,401.0000,403.6000,406.0000,408.8000,411.2000,413.8000,416.2000,417.0000,418.0000,418.8000,419.8000,420.6000,
421.4000,422.0000,423.0000,423.8000,424.8000,425.8000,426.4000,427.2000,428.0000,429.0000,429.8000,430.8000,431.6000,432.4000,433.8000,
434.8000,436.0000,437.0000,438.2000,439.4000,440.8000,441.8000,443.0000,444.0000,445.2000,446.6000,447.8000,449.0000,450.4000,451.8000,
453.2000,454.8000,456.0000,457.8000,459.0000,460.6000,462.0000,463.2000,464.8000,465.6000,466.4000,467.2000,468.0000,469.0000,470.0000,
470.8000,471.8000,472.8000,473.8000,474.6000,475.4000,476.2000,477.0000,478.0000,479.0000,480.0000,481.8000,483.8000,486.0000,488.2000,
490.4000,492.8000,494.8000,496.6000,497.0000,497.8000,498.8000,499.2000,500.0000,500.8000,501.6000,502.0000,503.0000,503.8000,504.4000,
505.0000,505.8000,506.6000,507.2000,508.0000,508.8000,509.4000,510.0000,510.8000,511.8000,512.2000,513.0000,514.0000,515.0000,516.0000,
517.0000,517.8000,518.8000,519.8000,520.8000,521.6000,522.4000,523.2000,524.2000,525.0000,526.0000,527.0000,528.0000,529.0000,530.0000,
531.0000,532.0000,533.0000,534.0000,535.0000,536.0000,537.0000,538.2000,539.2000,540.2000,541.4000,542.4000,543.4000,544.6000,545.8000,
546.8000,548.0000,549.0000,550.0000,551.4000,552.6000,553.8000,554.8000,556.0000,557.0000,558.0000,559.4000,560.6000,561.6000,562.6000,
563.6000,564.8000,565.8000,566.8000,567.8000,568.8000,569.8000,570.8000,571.8000,572.8000,573.8000,574.8000,575.8000,577.0000,578.2000,
579.8000,580.8000,582.0000,583.6000,584.8000,586.0000,587.4000,588.8000,590.0000,591.2000,592.6000,593.8000,594.8000,595.8000,596.8000,
597.8000,599.0000,600.0000,601.0000,602.0000,603.0000,604.2000,605.4000,606.4000,607.6000,608.6000,609.6000,610.6000,611.4000,612.4000,
613.4000,614.2000,615.2000,616.2000,617.0000,618.0000,619.0000,620.0000,621.0000,622.0000,623.0000,624.0000,625.0000,626.0000,627.0000,
628.0000,629.0000,630.0000,631.0000,632.0000,633.0000,634.0000,635.0000,636.0000,637.0000,638.0000,639.0000,640.0000,641.0000,642.0000,
643.0000,644.0000,645.0000,646.0000,647.0000,648.0000,649.0000,650.0000,651.0000,652.0000,653.0000,654.0000,655.0000,656.0000,657.0000,
658.2000,659.4000,660.8000,661.8000,662.8000,664.0000,665.0000,666.2000,667.4000,668.8000,669.8000,670.8000,672.0000,673.2000,674.8000,
676.0000,677.2000,678.8000,680.0000,681.2000,682.8000,684.0000,685.4000,686.8000,688.0000,688.8000,689.8000,690.4000,691.0000,691.8000,
692.8000,693.4000,694.0000,695.0000,695.8000,696.6000,697.0000,698.0000,698.8000,699.6000,700.2000,701.0000,701.8000,702.6000,703.2000,
704.0000,705.8000,707.8000,709.6000,711.2000,713.0000,715.0000,717.0000,718.8000,720.6000,721.8000,722.8000,724.0000,725.0000,726.0000,
727.4000,728.6000,729.8000,730.8000,732.0000,733.0000,734.2000,735.4000,736.8000,738.0000,739.2000,740.8000,742.0000,743.2000,744.8000,
746.0000,747.0000,748.8000,750.0000,751.0000,752.4000,753.0000,754.0000,754.8000,755.4000,756.0000,757.0000,757.8000,758.4000,759.0000,
760.0000,760.8000,761.4000,762.0000,763.0000,763.8000,764.4000,765.0000,766.0000,766.8000,767.4000,768.0000,769.2000,770.6000,771.8000,
772.8000,773.8000,775.0000,776.0000,777.2000,778.4000,779.8000,780.8000,781.8000,783.0000,784.0000,785.2000,786.4000,787.6000,788.8000,
789.8000,791.0000,792.0000,793.0000,794.2000,795.4000,796.6000,797.8000,798.8000,800.0000,801.0000,802.0000,803.4000,804.8000,805.8000,
807.0000,808.0000,809.2000,810.6000,811.8000,812.8000,814.0000,815.0000,816.4000,817.6000,818.8000,819.8000,821.0000,822.0000,823.0000,
824.2000,825.4000,826.8000,827.8000,828.8000,830.0000,831.0000,832.0000,833.4000,834.8000,835.8000,837.0000,838.0000,839.4000,840.8000,
841.8000,843.0000,844.0000,845.4000,846.8000,847.8000,848.8000,849.8000,850.8000,851.8000,852.6000,853.6000,854.4000,855.4000,856.2000,
857.0000,858.0000,859.0000,860.0000,861.0000,862.0000,862.8000,863.8000,864.8000,865.8000,866.8000,868.0000,869.0000,870.0000,871.0000,
872.0000,873.0000,874.0000,875.0000,876.0000,877.2000,878.2000,879.2000,880.4000,881.8000,882.8000,884.0000,885.0000,886.2000,887.6000,
888.8000,889.8000,891.0000,892.0000,893.4000,894.8000,895.8000,896.8000,897.8000,898.8000,899.8000,900.8000,901.8000,902.6000,903.6000,
904.4000,905.4000,906.4000,907.2000,908.2000,909.0000,910.0000,911.0000,912.0000,913.4000,914.8000,916.0000,917.8000,919.0000,920.2000,
921.8000,923.0000,924.6000,925.8000,927.0000,928.6000,929.8000,930.8000,932.0000,933.0000,934.2000,935.4000,936.8000,937.8000,939.0000,
940.0000,941.0000,942.4000,943.6000,944.8000,945.8000,946.8000,947.8000,948.8000,949.8000,950.8000,951.8000,952.8000,953.8000,954.8000,
955.8000,957.0000,958.0000,959.0000,960.0000,961.0000,961.8000,962.8000,963.8000,964.6000,965.4000,966.4000,967.2000,968.0000,969.0000,
970.0000,970.8000,971.8000,972.8000,973.8000,974.6000,975.4000,976.2000,977.4000,978.6000,979.8000,980.8000,981.8000,983.0000,984.0000,
985.0000,986.0000,987.2000,988.4000,989.6000,990.8000,991.8000,992.8000,994.0000,995.0000,996.0000,997.2000,998.4000,999.8000,1000.8000,
1001.8000,1003.0000,1004.0000,1005.0000,1006.2000,1007.6000,1009.0000,1011.4000,1013.8000,1016.0000,1018.6000,1021.0000,1023.2000,1024.8000,1026.0000,
1027.0000,1028.2000,1029.4000,1030.6000,1031.8000,1032.8000,1034.0000,1035.0000,1036.0000,1037.2000,1038.6000,1039.8000,1040.8000,1042.0000,1043.0000,
1044.0000,1045.4000,1046.8000,1047.8000,1049.0000,1050.0000,1051.0000,1052.4000,1053.8000,1054.8000,1056.0000,1057.0000,1058.0000,1059.2000,1060.4000,
1061.6000,1062.8000,1063.8000,1064.8000,1066.0000,1067.0000,1068.0000,1069.4000,1070.6000,1071.8000,1072.8000,1074.0000,1075.0000,1076.2000,1077.6000,
1078.8000,1079.8000,1081.0000,1082.0000,1083.4000,1084.8000,1085.8000,1087.0000,1088.0000,1089.0000,1090.2000,1091.4000,1092.6000,1093.8000,1094.8000,
1095.8000,1096.8000,1097.8000,1099.0000,1100.0000,1101.0000,1102.0000,1103.2000,1104.4000,1105.6000,1106.8000,1107.8000,1109.0000,1110.0000,1111.0000,
1112.2000,1113.6000,1114.8000,1115.8000,1116.8000,1118.0000,1119.0000,1120.2000,1121.0000,1121.8000,1122.8000,1123.4000,1124.0000,1125.0000,1125.8000,
1126.6000,1127.0000,1128.0000,1128.8000,1129.6000,1130.2000,1131.0000,1131.8000,1132.8000,1133.4000,1134.0000,1135.0000,1135.8000,1136.8000,1137.8000,
1138.8000,1139.8000,1140.8000,1141.8000,1142.8000,1143.8000,1145.0000,1146.0000,1147.0000,1148.0000,1149.0000,1150.0000,1151.0000,1152.0000,1153.6000,
1154.8000,1156.0000,1157.0000,1158.6000,1159.8000,1161.0000,1162.2000,1163.6000,1164.8000,1166.0000,1167.2000,1168.4000,1169.0000,1170.0000,1170.8000,
1171.4000,1172.0000,1173.0000,1173.8000,1174.6000,1175.0000,1176.0000,1176.8000,1177.6000,1178.0000,1179.0000,1179.8000,1180.6000,1181.2000,1182.0000,
1182.8000,1183.6000,1184.2000,1185.0000,1186.0000,1186.8000,1187.6000,1188.2000,1189.0000,1190.0000,1190.8000,1191.8000,1192.4000,1193.0000,1194.0000,
1194.8000,1195.8000,1196.4000,1197.0000,1198.0000,1198.8000,1199.8000,1200.6000,1201.8000,1202.8000,1203.8000,1205.0000,1206.0000,1207.2000,1208.4000,
1209.6000,1210.8000,1211.8000,1213.0000,1214.0000,1215.0000,1216.4000,1218.4000,1220.6000,1222.8000,1224.8000,1226.8000,1228.8000,1230.8000,1232.6000,
1233.2000,1234.0000,1235.0000,1235.8000,1236.8000,1237.4000,1238.0000,1239.0000,1239.8000,1240.8000,1241.6000,1242.4000,1243.0000,1244.0000,1244.8000,
1245.8000,1246.6000,1247.2000,1248.0000,1250.8000,1253.2000,1256.0000,1258.8000,1261.2000,1264.0000,1264.8000,1265.4000,1266.0000,1266.8000,1267.0000,
1267.8000,1268.6000,1269.0000,1269.8000,1270.4000,1271.0000,1271.8000,1272.0000,1272.8000,1273.6000,1274.0000,1274.8000,1275.2000,1276.0000,1276.8000,
1277.0000,1277.8000,1278.4000,1279.0000,1279.8000,1280.4000,1281.8000,1282.8000,1284.0000,1285.2000,1286.6000,1287.8000,1289.0000,1290.0000,1291.4000,
1292.8000,1293.8000,1295.0000,1296.0000,1297.6000,1298.8000,1300.0000,1301.0000,1302.2000,1303.8000,1304.8000,1306.0000,1307.0000,1308.4000,1309.8000,
1310.8000,1312.0000,1313.6000,1314.8000,1316.0000,1317.8000,1319.0000,1320.4000,1321.8000,1323.0000,1324.6000,1326.0000,1327.2000,1328.8000,1330.0000,
1331.2000,1332.8000,1333.8000,1335.0000,1336.6000,1337.8000,1339.0000,1340.4000,1341.8000,1343.0000,1344.2000,1345.0000,1345.8000,1346.6000,1347.0000,
1348.0000,1348.8000,1349.4000,1350.0000,1350.8000,1351.8000,1352.2000,1353.0000,1353.8000,1354.6000,1355.0000,1356.0000,1356.8000,1357.4000,1358.0000,
1358.8000,1359.8000,1360.4000,1361.4000,1362.6000,1363.6000,1364.6000,1365.6000,1366.8000,1367.8000,1368.8000,1369.8000,1370.8000,1371.8000,1372.8000,
1373.8000,1374.8000,1375.8000,1377.8000,1380.0000,1382.4000,1384.8000,1387.0000,1389.8000,1392.0000,1393.0000,1393.8000,1394.8000,1395.8000,1396.8000,
1397.6000,1398.4000,1399.0000,1400.0000,1401.0000,1402.0000,1402.8000,1403.8000,1404.8000,1405.6000,1406.4000,1407.2000,1408.0000,1409.2000,1410.4000,
1411.6000,1412.8000,1413.8000,1414.8000,1416.0000,1417.0000,1418.0000,1419.2000,1420.4000,1421.6000,1422.8000,1423.8000,1424.8000,1425.8000,1426.6000,
1427.2000,1428.0000,1429.0000,1430.0000,1430.8000,1431.8000,1432.6000,1433.4000,1434.0000,1435.0000,1436.0000,1436.8000,1437.8000,1438.6000,1439.4000,
1440.2000,1441.0000,1442.0000,1443.0000,1444.0000,1445.0000,1446.0000,1447.0000,1448.0000,1449.0000,1450.0000,1451.0000,1451.8000,1452.8000,1453.8000,
1454.8000,1455.8000,1457.8000,1460.2000,1463.0000,1465.8000,1468.2000,1471.0000,1472.8000,1473.2000,1474.0000,1474.8000,1475.6000,1476.2000,1477.0000,
1477.8000,1478.6000,1479.0000,1480.0000,1480.8000,1481.4000,1482.0000,1482.8000,1483.8000,1484.2000,1485.0000,1485.8000,1486.6000,1487.2000,1488.0000,
1490.6000,1493.8000,1496.8000,1500.0000,1503.0000,1504.8000,1505.6000,1506.2000,1507.0000,1508.0000,1508.8000,1509.6000,1510.2000,1511.0000,1511.8000,
1512.8000,1513.6000,1514.2000,1515.0000,1515.8000,1516.8000,1517.6000,1518.0000,1519.0000,1519.8000,1520.8000,1521.8000,1523.0000,1524.0000,1525.0000,
1526.0000,1527.2000,1528.2000,1529.4000,1530.6000,1531.8000,1532.8000,1533.8000,1534.8000,1535.8000,1536.8000,1537.6000,1538.2000,1539.0000,1539.8000,
1540.8000,1541.4000,1542.0000,1543.0000,1543.8000,1544.6000,1545.2000,1546.0000,1546.8000,1547.8000,1548.4000,1549.0000,1550.0000,1550.8000,1551.6000,
1552.2000,1553.8000,1555.0000,1556.2000,1557.8000,1559.0000,1560.2000,1561.8000,1563.0000,1564.2000,1565.8000,1567.0000,1568.2000,1569.0000,1569.8000,
1570.2000,1571.0000,1571.8000,1572.0000,1573.0000,1573.8000,1574.0000,1575.0000,1575.8000,1576.0000,1576.8000,1577.8000,1578.0000,1578.8000,1579.8000,
1580.0000,1580.8000,1581.6000,1582.0000,1582.8000,1583.6000,1584.0000,1590.0000,1596.2000,1600.6000,1601.0000,1602.0000,1602.8000,1603.4000,1604.0000,
1605.0000,1605.8000,1606.4000,1607.0000,1607.8000,1608.8000,1609.2000,1610.0000,1610.8000,1611.8000,1612.2000,1613.0000,1613.8000,1614.6000,1615.2000,
1616.0000,1616.8000,1617.8000,1618.8000,1619.6000,1620.4000,1621.2000,1622.0000,1623.0000,1624.0000,1624.8000,1625.8000,1626.6000,1627.4000,1628.2000,
1629.0000,1630.0000,1631.0000,1631.8000,1633.2000,1635.0000,1636.8000,1638.8000,1640.6000,1642.4000,1644.0000,1646.0000,1647.8000,1649.0000,1650.4000,
1651.8000,1652.8000,1654.0000,1655.0000,1656.4000,1657.8000,1658.8000,1660.0000,1661.2000,1662.6000,1663.8000,1664.8000,1665.0000,1665.8000,1666.6000,
1667.0000,1667.8000,1668.6000,1669.0000,1669.8000,1670.4000,1671.0000,1671.8000,1672.2000,1673.0000,1673.8000,1674.2000,1675.0000,1675.6000,1676.0000,
1676.8000,1677.6000,1678.0000,1678.8000,1679.4000,1680.0000,1682.2000,1685.0000,1687.6000,1690.0000,1692.8000,1695.6000,1696.8000,1697.8000,1698.6000,
1699.4000,1700.0000,1701.0000,1701.8000,1702.8000,1703.8000,1704.4000,1705.2000,1706.0000,1707.0000,1707.8000,1708.8000,1709.6000,1710.2000,1711.0000,
1712.0000,1713.0000,1714.0000,1715.4000,1716.6000,1717.8000,1718.8000,1719.8000,1721.0000,1722.0000,1723.0000,1724.2000,1725.6000,1726.8000,1727.8000,
1728.8000,1729.6000,1730.2000,1731.0000,1731.8000,1732.8000,1733.6000,1734.2000,1735.0000,1736.0000,1736.8000,1737.6000,1738.4000,1739.0000,1740.0000,
1740.8000,1741.8000,1742.4000,1743.0000,1744.0000,1745.0000,1746.2000,1747.6000,1748.8000,1749.8000,1751.0000,1752.0000,1753.4000,1754.8000,1755.8000,
1757.0000,1758.0000,1759.2000,1760.4000,1761.4000,1762.4000,1763.4000,1764.4000,1765.4000,1766.4000,1767.4000,1768.4000,1769.4000,1770.4000,1771.4000,
1772.4000,1773.4000,1774.4000,1775.4000,1776.4000,1777.4000,1778.4000,1779.4000,1780.4000,1781.6000,1782.6000,1783.6000,1784.6000,1785.6000,1786.6000,
1787.6000,1788.6000,1789.8000,1790.8000,1791.8000,1792.8000,1794.4000,1796.0000,1797.6000,1799.0000,1800.8000,1802.2000,1803.8000,1805.4000,1807.0000,
1808.4000,1809.4000,1810.4000,1811.4000,1812.4000,1813.4000,1814.2000,1815.2000,1816.2000,1817.2000,1818.2000,1819.2000,1820.2000,1821.0000,1822.0000,
1823.0000,1824.0000,1825.6000,1826.8000,1828.0000,1829.6000,1830.8000,1832.0000,1833.8000,1834.8000,1836.0000,1837.8000,1839.0000,1840.0000,1841.0000,
1842.0000,1842.8000,1843.8000,1844.8000,1845.6000,1846.4000,1847.2000,1848.0000,1849.0000,1850.0000,1850.8000,1851.8000,1852.8000,1853.6000,1854.4000,
1855.2000,1856.0000,1857.0000,1858.0000,1859.0000,1860.0000,1861.0000,1862.0000,1863.0000,1864.0000,1865.0000,1866.0000,1867.0000,1868.0000,1869.0000,
1870.0000,1871.0000,1872.0000,1873.0000,1874.2000,1875.4000,1876.8000,1877.8000,1879.0000,1880.0000,1881.2000,1882.6000,1883.8000,1884.8000,1886.0000,
1887.0000,1888.4000,1889.8000,1891.2000,1892.8000,1894.0000,1895.8000,1897.0000,1898.4000,1899.8000,1901.2000,1902.8000,1904.0000,1905.8000,1907.0000,
1908.8000,1910.0000,1911.6000,1913.0000,1914.6000,1916.0000,1917.4000,1918.8000,1920.2000,1921.0000,1922.0000,1923.0000,1923.8000,1924.8000,1925.8000,
1926.6000,1927.4000,1928.2000,1929.0000,1930.0000,1931.0000,1931.8000,1932.8000,1933.8000,1934.6000,1935.4000,1936.2000,1937.2000,1938.4000,1939.4000,
1940.4000,1941.4000,1942.6000,1943.6000,1944.6000,1945.8000,1946.8000,1947.8000,1948.8000,1949.8000,1950.8000,1951.8000,1953.0000,1954.0000,1955.6000,
1956.8000,1958.0000,1959.2000,1960.8000,1962.0000,1963.0000,1964.6000,1965.8000,1967.0000,1968.2000,1969.0000,1970.0000,1971.0000,1972.0000,1973.0000,
1974.0000,1975.0000,1976.0000,1976.8000,1977.8000,1978.8000,1979.8000,1980.8000,1981.8000,1982.8000,1983.6000,1984.6000,1985.8000,1986.8000,1988.0000,
1989.0000,1990.2000,1991.6000,1992.8000,1993.8000,1995.0000,1996.0000,1997.2000,1998.6000,1999.8000,2000.8000,2001.8000,2002.8000,2003.8000,2004.6000,
2005.6000,2006.4000,2007.4000,2008.4000,2009.2000,2010.2000,2011.0000,2012.0000,2013.0000,2014.0000,2015.0000,2016.0000,2018.0000,2020.0000,2022.2000,
2024.4000,2026.8000,2028.8000,2030.8000,2048.8000,2049.6001,2050.3999,2051.2000,2052.0000,2053.0000,2054.0000,2054.8000,2055.8000,2056.8000,2057.6001,
2058.3999,2059.2000,2060.0000,2061.0000,2062.0000,2062.8000,2063.8000,2065.0000,2066.8000,2068.8000,2070.8000,2072.6001,2074.3999,2076.0000,2078.0000,
2080.0000,2080.8000,2081.0000,2081.8000,2082.2000,2082.8000,2083.3999,2084.0000,2084.6001,2085.0000,2085.8000,2086.0000,2086.8000,2087.2000,2087.8000,
2088.3999,2089.0000,2089.6001,2090.0000,2090.8000,2091.0000,2091.8000,2092.0000,2092.8000,2093.2000,2093.8000,2094.3999,2095.0000,2095.6001,2096.0000,
2098.0000,2100.8000,2103.0000,2105.8000,2108.0000,2110.6001,2112.6001,2113.2000,2114.0000,2114.8000,2115.8000,2116.3999,2117.0000,2118.0000,2118.8000,
2119.8000,2120.3999,2121.0000,2122.0000,2122.8000,2123.8000,2124.3999,2125.0000,2126.0000,2126.8000,2127.8000,2128.8000,2130.8000,2132.8000,2134.8000,
2136.8000,2138.8000,2141.0000,2143.0000,2144.8000,2146.0000,2147.0000,2148.3999,2149.8000,2151.0000,2152.0000,2153.3999,2154.8000,2156.0000,2157.0000,
2158.3999,2159.8000,2160.8000,2161.8000,2162.6001,2163.3999,2164.2000,2165.0000,2166.0000,2167.0000,2168.0000,2168.8000,2169.8000,2170.8000,2171.8000,
2172.6001,2173.3999,2174.2000,2175.0000,2176.0000,2177.0000,2178.0000,2179.2000,2180.3999,2181.3999,2182.6001,2183.8000,2184.8000,2185.8000,2186.8000,
2187.8000,2189.0000,2190.0000,2191.0000,2192.0000,2193.2000,2194.3999,2195.6001,2196.8000,2197.8000,2199.0000,2200.0000,2201.0000,2202.2000,2203.3999,
2204.8000,2205.8000,2206.8000,2208.0000,2208.8000,2209.8000,2210.3999,2211.0000,2212.0000,2212.8000,2213.6001,2214.2000,2215.0000,2215.8000,2216.8000,
2217.6001,2218.2000,2219.0000,2219.8000,2220.8000,2221.3999,2222.0000,2223.0000,2223.8000,2225.8000,2229.6001,2233.0000,2236.8000,2240.0000,2241.0000,
2241.8000,2242.8000,2243.6001,2244.2000,2245.0000,2245.8000,2246.8000,2247.6001,2248.2000,2249.0000,2250.0000,2250.8000,2251.8000,2252.3999,2253.0000,
2254.0000,2254.8000,2255.8000,2256.3999,2257.2000,2258.0000,2259.0000,2260.0000,2260.8000,2261.8000,2262.8000,2263.6001,2264.3999,2265.2000,2266.0000,
2267.0000,2267.8000,2268.8000,2269.8000,2270.6001,2271.3999,2272.2000,2273.6001,2274.8000,2276.0000,2277.0000,2278.2000,2279.6001,2280.8000,2281.8000,
2283.0000,2284.2000,2285.6001,2286.8000,2287.8000,2288.8000,2289.8000,2290.8000,2291.6001,2292.2000,2293.0000,2294.0000,2295.0000,2295.8000,2296.8000,
2297.8000,2298.3999,2299.2000,2300.0000,2301.0000,2302.0000,2302.8000,2303.8000,2304.6001,2305.3999,2306.0000,2307.0000,2307.8000,2308.8000,2309.6001,
2310.2000,2311.0000,2312.0000,2312.8000,2313.8000,2314.3999,2315.0000,2316.0000,2316.8000,2317.8000,2318.6001,2319.3999,2320.0000,2322.0000,2324.0000,
2326.0000,2328.0000,2329.8000,2331.8000,2333.8000,2335.8000,2337.0000,2337.8000,2338.8000,2339.8000,2340.8000,2341.8000,2342.6001,2343.3999,2344.2000,
2345.2000,2346.0000,2347.0000,2348.0000,2349.0000,2350.0000,2350.8000,2351.8000,2352.8000,2353.8000,2354.3999,2355.2000,2356.0000,2357.0000,2358.0000,
2358.8000,2359.8000,2360.8000,2361.6001,2362.3999,2363.2000,2364.0000,2365.0000,2366.0000,2366.8000,2367.8000,2369.0000,2371.0000,2373.0000,2375.0000,
2376.8000,2378.8000,2380.8000,2382.8000,2384.3999,2385.0000,2386.0000,2387.0000,2388.0000,2388.8000,2389.8000,2390.8000,2391.6001,2392.3999,2393.2000,
2394.0000,2395.0000,2396.0000,2396.8000,2397.8000,2398.8000,2399.8000,2400.6001,2401.8000,2402.8000,2404.0000,2405.0000,2406.2000,2407.3999,2408.6001,
2409.8000,2410.8000,2412.0000,2413.0000,2414.2000,2415.3999,2416.8000,2417.8000,2419.0000,2420.0000,2421.2000,2422.3999,2423.8000,2424.8000,2426.0000,
2427.0000,2428.2000,2429.3999,2430.8000,2431.8000,2432.8000,2433.8000,2434.8000,2435.8000,2436.8000,2437.8000,2438.8000,2439.8000,2440.8000,2441.6001,
2442.6001,2443.6001,2444.3999,2445.3999,2446.3999,2447.2000,2448.2000,2449.8000,2451.0000,2452.8000,2454.0000,2455.6001,2457.0000,2458.3999,2459.8000,
2461.0000,2462.8000,2464.0000,2465.0000,2466.2000,2467.2000,2468.3999,2469.6001,2470.8000,2471.8000,2472.8000,2473.8000,2474.8000,2476.0000,2477.0000,
2478.0000,2479.0000,2480.0000,2481.6001,2482.8000,2484.0000,2485.0000,2486.3999,2487.8000,2488.8000,2490.0000,2491.3999,2492.8000,2493.8000,2495.0000,
2496.2000,2497.3999,2498.8000,2499.8000,2500.8000,2502.0000,2503.0000,2504.0000,2505.2000,2506.3999,2507.6001,2508.8000,2509.8000,2510.8000,2512.0000,
2513.0000,2514.0000,2515.0000,2516.2000,2517.3999,2518.6001,2519.8000,2520.8000,2521.8000,2522.8000,2524.0000,2525.0000,2526.0000,2527.0000,2528.2000,
2529.0000,2530.0000,2531.0000,2532.0000,2533.0000,2534.0000,2535.0000,2536.0000,2536.8000,2537.8000,2538.8000,2539.8000,2540.8000,2541.8000,2542.8000,
2543.6001,2544.6001,2545.3999,2546.3999,2547.2000,2548.2000,2549.2000,2550.0000,2551.0000,2552.0000,2553.0000,2554.0000,2555.0000,2556.0000,2557.0000,
2557.8000,2558.8000,2559.8000,2561.0000,2562.3999,2563.8000,2565.0000,2566.6001,2567.8000,2569.0000,2570.8000,2572.0000,2573.3999,2574.8000,2576.0000,
2576.8000,2577.6001,2578.0000,2579.0000,2579.8000,2580.2000,2581.0000,2581.8000,2582.2000,2583.0000,2583.8000,2584.3999,2585.0000,2585.8000,2586.6001,
2587.0000,2587.8000,2588.6001,2589.0000,2590.0000,2590.8000,2591.2000,2592.0000,2592.8000,2593.8000,2594.8000,2595.8000,2596.6001,2597.3999,2598.2000,
2599.0000,2600.0000,2601.0000,2602.0000,2603.0000,2603.8000,2604.8000,2605.8000,2606.8000,2607.6001,2609.0000,2612.0000,2615.3999,2618.8000,2621.8000,
2624.3999,2625.2000,2626.0000,2627.0000,2627.8000,2628.8000,2629.3999,2630.2000,2631.0000,2632.0000,2632.8000,2633.8000,2634.3999,2635.0000,2636.0000,
2637.0000,2637.8000,2638.8000,2639.3999,2640.2000,2641.8000,2642.8000,2644.0000,2645.6001,2646.8000,2648.0000,2649.6001,2650.8000,2652.0000,2653.3999,
2654.8000,2656.0000,2657.0000,2658.0000,2658.8000,2659.8000,2660.8000,2661.8000,2662.8000,2663.8000,2664.6001,2665.3999,2666.3999,2667.2000,2668.2000,
2669.0000,2670.0000,2671.0000,2672.0000,2673.2000,2674.8000,2676.0000,2677.0000,2678.8000,2679.8000,2681.0000,2682.6001,2683.8000,2685.0000,2686.6001,
2687.8000,2689.0000,2690.6001,2691.8000,2693.0000,2694.3999,2695.8000,2697.0000,2698.2000,2699.8000,2701.0000,2702.2000,2703.8000,2704.8000,2705.8000,
2706.6001,2707.6001,2708.3999,2709.2000,2710.0000,2711.0000,2712.0000,2713.0000,2714.0000,2714.8000,2715.8000,2716.8000,2717.8000,2718.8000,2719.6001,
2720.8000,2721.8000,2723.0000,2724.6001,2725.8000,2727.0000,2728.3999,2729.8000,2731.0000,2732.2000,2733.8000,2735.0000,2736.0000,2737.2000,2738.2000,
2739.2000,2740.2000,2741.3999,2742.3999,2743.3999,2744.3999,2745.6001,2746.6001,2747.6001,2748.6001,2749.6001,2750.8000,2751.8000,2752.8000,2753.8000,
2754.8000,2755.8000,2756.8000,2757.8000,2758.8000,2759.8000,2760.8000,2761.8000,2762.8000,2764.0000,2765.0000,2766.0000,2767.0000,2768.0000,2769.3999,
2771.0000,2772.3999,2773.8000,2775.2000,2776.8000,2778.2000,2779.8000,2781.0000,2782.8000,2784.0000,2785.0000,2785.8000,2786.3999,2787.0000,2787.8000,
2788.8000,2789.2000,2790.0000,2790.8000,2791.6001,2792.2000,2793.0000,2793.8000,2794.6001,2795.0000,2796.0000,2796.8000,2797.3999,2798.0000,2798.8000,
2799.8000,2800.6001,2802.0000,2803.8000,2805.3999,2807.0000,2808.8000,2810.2000,2812.0000,2813.6001,2815.0000,2816.3999,2817.0000,2817.8000,2818.3999,
2819.0000,2819.8000,2820.3999,2821.0000,2821.8000,2822.3999,2823.0000,2823.8000,2824.3999,2825.0000,2825.8000,2826.3999,2827.0000,2827.8000,2828.3999,
2829.0000,2829.8000,2830.3999,2831.0000,2831.8000,2832.6001,2833.3999,2834.2000,2835.0000,2836.0000,2837.0000,2838.0000,2838.8000,2839.8000,2840.8000,
2841.8000,2842.6001,2843.3999,2844.2000,2845.0000,2846.0000,2847.0000,2848.0000,2849.3999,2851.0000,2852.8000,2854.0000,2855.8000,2857.6001,2859.0000,
2860.8000,2862.2000,2864.0000,2865.0000,2866.0000,2867.0000,2868.0000,2869.0000,2870.0000,2871.0000,2872.0000,2873.0000,2874.0000,2875.0000,2876.0000,
2877.0000,2878.0000,2878.8000,2879.8000,2881.0000,2882.3999,2883.8000,2885.0000,2886.2000,2887.6001,2888.8000,2890.0000,2891.3999,2892.8000,2894.0000,
2895.2000,2896.3999,2897.0000,2898.0000,2898.8000,2899.6001,2900.2000,2901.0000,2901.8000,2902.8000,2903.3999,2904.0000,2905.0000,2905.8000,2906.6001,
2907.0000,2908.0000,2908.8000,2909.8000,2910.2000,2911.0000,2911.8000,2913.0000,2914.6001,2916.0000,2917.6001,2919.0000,2920.6001,2922.0000,2923.6001,
2925.0000,2926.6001,2928.0000,2929.0000,2930.2000,2931.3999,2932.6001,2933.8000,2934.8000,2935.8000,2937.0000,2938.0000,2939.2000,2940.3999,2941.6001,
2942.8000,2943.8000,2944.8000,2945.8000,2946.8000,2947.8000,2948.8000,2949.8000,2950.8000,2951.8000,2952.8000,2953.8000,2954.8000,2955.8000,2956.8000,
2957.8000,2958.8000,2959.8000,2960.8000,2962.0000,2963.8000,2965.0000,2966.2000,2967.8000,2969.0000,2970.3999,2971.8000,2973.0000,2974.8000,2976.0000,
2977.0000,2977.8000,2978.8000,2979.6001,2980.3999,2981.2000,2982.0000,2983.0000,2983.8000,2984.8000,2985.8000,2986.6001,2987.2000,2988.0000,2989.0000,
2990.0000,2990.8000,2991.8000,2992.8000,2993.8000,2995.0000,2996.2000,2997.6001,2998.8000,2999.8000,3001.0000,3002.0000,3003.3999,3004.8000,3005.8000,
3007.0000,3008.0000,3009.0000,3009.8000,3010.8000,3011.8000,3012.6001,3013.2000,3014.0000,3015.0000,3015.8000,3016.8000,3017.8000,3018.3999,3019.2000,
3020.0000,3021.0000,3021.8000,3022.8000,3023.6001,3024.3999,3025.6001,3026.8000,3027.8000,3029.0000,3030.0000,3031.0000,3032.2000,3033.3999,3034.6001,
3035.8000,3036.8000,3037.8000,3039.0000,3040.0000,3041.0000,3041.8000,3042.6001,3043.2000,3044.0000,3044.8000,3045.8000,3046.6001,3047.0000,3048.0000,
3048.8000,3049.8000,3050.3999,3051.0000,3052.0000,3052.8000,3053.6001,3054.2000,3055.0000,3056.0000,3057.8000,3060.0000,3062.8000,3065.0000,3067.8000,
3070.0000,3072.6001,3074.6001,3076.3999,3078.3999,3080.3999,3082.3999,3084.2000,3086.2000,3088.0000,3089.0000,3089.8000,3090.3999,3091.0000,3091.8000,
3092.6001,3093.0000,3093.8000,3094.8000,3095.2000,3096.0000,3096.8000,3097.3999,3098.0000,3098.8000,3099.8000,3100.2000,3101.0000,3101.8000,3102.3999,
3103.0000,3103.8000,3104.8000,3106.0000,3107.2000,3108.8000,3109.8000,3111.0000,3112.3999,3113.8000,3115.0000,3116.0000,3117.3999,3118.8000,3120.0000,
3121.0000,3122.6001,3123.8000,3125.0000,3126.2000,3127.6001,3128.8000,3130.0000,3131.2000,3132.8000,3133.8000,3135.0000,3136.2000,3137.0000,3138.0000,
3139.0000,3139.8000,3140.8000,3141.8000,3142.8000,3143.6001,3144.3999,3145.2000,3146.0000,3147.0000,3148.0000,3148.8000,3149.8000,3150.8000,3151.6001,
3152.3999,3153.3999,3154.2000,3155.0000,3156.0000,3157.0000,3157.8000,3158.8000,3159.8000,3160.8000,3161.6001,3162.3999,3163.2000,3164.0000,3165.0000,
3166.0000,3167.0000,3167.8000,3168.8000,3170.0000,3171.0000,3172.0000,3173.3999,3174.6001,3175.8000,3176.8000,3178.0000,3179.0000,3180.0000,3181.2000,
3182.3999,3183.8000,3184.8000,3185.6001,3186.3999,3187.2000,3188.2000,3189.0000,3190.0000,3191.0000,3192.0000,3192.8000,3193.8000,3194.8000,3195.8000,
3196.6001,3197.3999,3198.2000,3199.0000,3200.0000,3201.8000,3203.0000,3204.8000,3206.3999,3208.0000,3209.8000,3211.0000,3212.8000,3214.2000,3216.0000,
3216.8000,3217.3999,3218.0000,3218.8000,3219.3999,3220.0000,3220.8000,3221.2000,3222.0000,3222.8000,3223.2000,3224.0000,3224.8000,3225.2000,3226.0000,
3226.8000,3227.0000,3227.8000,3228.6001,3229.0000,3229.8000,3230.6001,3231.0000,3231.8000,3232.8000,3234.6001,3236.0000,3237.8000,3239.3999,3241.0000,
3242.8000,3244.2000,3245.8000,3247.6001,3248.8000,3249.8000,3250.3999,3251.2000,3252.0000,3253.0000,3254.0000,3254.8000,3255.8000,3256.6001,3257.3999,
3258.2000,3259.0000,3260.0000,3260.8000,3261.8000,3262.8000,3263.6001,3264.3999,3265.2000,3266.0000,3267.0000,3268.0000,3269.0000,3269.8000,3270.8000,
3271.8000,3272.8000,3273.6001,3274.3999,3275.2000,3276.0000,3277.0000,3278.0000,3279.0000,3279.8000,3281.0000,3282.0000,3283.0000,3284.2000,3285.3999,
3286.6001,3287.8000,3288.8000,3289.8000,3291.0000,3292.0000,3293.2000,3294.3999,3295.6001,3296.6001,3297.2000,3298.0000,3298.8000,3299.8000,3300.3999,
3301.0000,3302.0000,3302.8000,3303.3999,3304.0000,3305.0000,3305.8000,3306.6001,3307.2000,3308.0000,3308.8000,3309.8000,3310.3999,3311.0000,3312.0000,
3312.8000,3313.8000,3314.3999,3315.0000,3316.0000,3316.8000,3317.8000,3318.3999,3319.0000,3320.0000,3320.8000,3321.8000,3322.3999,3323.0000,3324.0000,
3324.8000,3325.8000,3326.6001,3327.2000,3328.0000,3328.8000,3329.3999,3330.0000,3330.8000,3331.3999,3332.0000,3332.8000,3333.3999,3334.0000,3334.8000,
3335.2000,3336.0000,3336.8000,3337.2000,3338.0000,3338.8000,3339.2000,3340.0000,3340.8000,3341.0000,3342.0000,3342.8000,3343.0000,3343.8000,3345.0000,
3346.6001,3348.0000,3349.6001,3351.0000,3352.6001,3354.0000,3355.6001,3357.0000,3358.6001,3360.0000,3360.8000,3361.6001,3362.0000,3362.8000,3363.8000,
3364.0000,3365.0000,3365.8000,3366.2000,3367.0000,3367.8000,3368.3999,3369.0000,3369.8000,3370.3999,3371.0000,3371.8000,3372.6001,3373.0000,3373.8000,
3374.6001,3375.0000,3376.0000,3376.8000,3377.3999,3378.0000,3378.8000,3379.8000,3380.3999,3381.0000,3381.8000,3382.8000,3383.3999,3384.0000,3384.8000,
3385.8000,3386.3999,3387.0000,3387.8000,3388.8000,3389.3999,3390.0000,3390.8000,3391.8000,3392.8000,3394.0000,3395.6001,3397.0000,3398.3999,3399.8000,
3401.2000,3402.8000,3404.0000,3405.8000,3407.0000,3408.3999,3409.0000,3409.8000,3410.6001,3411.2000,3412.0000,3412.8000,3413.3999,3414.0000,3414.8000,
3415.8000,3416.2000,3417.0000,3417.8000,3418.3999,3419.0000,3419.8000,3420.8000,3421.2000,3422.0000,3422.8000,3423.6001,3424.0000,3425.0000,3425.8000,
3426.8000,3427.3999,3428.0000,3429.0000,3429.8000,3430.6001,3431.2000,3432.0000,3433.0000,3433.8000,3434.6001,3435.2000,3436.0000,3436.8000,3437.8000,
3438.6001,3439.2000,3440.0000,3440.8000,3441.8000,3442.8000,3443.3999,3444.2000,3445.0000,3446.0000,3446.8000,3447.8000,3448.6001,3449.2000,3450.0000,
3451.0000,3451.8000,3452.8000,3453.6001,3454.3999,3455.0000,3456.0000,3457.0000,3458.2000,3459.3999,3460.6001,3461.8000,3462.8000,3464.0000,3465.0000,
3466.0000,3467.2000,3468.6001,3469.8000,3470.8000,3471.8000,3472.6001,3473.0000,3473.8000,3474.0000,3474.8000,3475.0000,3475.8000,3476.0000,3476.8000,
3477.0000,3477.8000,3478.0000,3478.8000,3479.0000,3479.8000,3480.0000,3480.8000,3481.0000,3481.8000,3482.2000,3482.8000,3483.2000,3483.8000,3484.2000,
3484.8000,3485.2000,3485.8000,3486.3999,3486.8000,3487.3999,3487.8000,3488.8000,3489.8000,3491.0000,3492.2000,3493.6001,3494.8000,3495.8000,3497.0000,
3498.2000,3499.6001,3500.8000,3501.8000,3503.0000,3504.0000,3505.0000,3505.8000,3506.6001,3507.2000,3508.0000,3508.8000,3509.8000,3510.3999,3511.0000,
3512.0000,3512.8000,3513.6001,3514.0000,3515.0000,3515.8000,3516.6001,3517.2000,3518.0000,3518.8000,3519.8000,3520.3999,3521.0000,3521.8000,3522.8000,
3523.3999,3524.0000,3524.8000,3525.8000,3526.3999,3527.0000,3527.8000,3528.8000,3529.3999,3530.0000,3530.8000,3531.8000,3532.3999,3533.0000,3533.8000,
3534.8000,3535.3999,3536.0000,3536.8000,3537.8000,3538.3999,3539.0000,3540.0000,3540.8000,3541.6001,3542.2000,3543.0000,3543.8000,3544.8000,3545.3999,
3546.0000,3547.0000,3547.8000,3548.6001,3549.2000,3550.0000,3550.8000,3551.8000,3552.3999,3553.0000,3553.8000,3554.8000,3555.2000,3556.0000,3556.8000,
3557.6001,3558.0000,3559.0000,3559.8000,3560.3999,3561.0000,3561.8000,3562.8000,3563.2000,3564.0000,3564.8000,3565.6001,3566.0000,3567.0000,3567.8000,
3568.2000,3568.8000,3569.3999,3569.8000,3570.3999,3571.0000,3571.3999,3572.0000,3572.6001,3573.0000,3573.6001,3574.0000,3574.6001,3575.0000,3575.8000,
3576.0000,3576.8000,3577.0000,3577.8000,3578.0000,3578.8000,3579.0000,3579.8000,3580.0000,3580.8000,3581.0000,3581.8000,3582.2000,3582.8000,3583.2000,
3583.8000,3584.3999,3585.0000,3586.0000,3586.8000,3587.8000,3588.6001,3589.2000,3590.0000,3590.8000,3591.8000,3592.6001,3593.2000,3594.0000,3595.0000,
3595.8000,3596.6001,3597.3999,3598.0000,3599.0000,3599.8000,3600.8000,3601.8000,3602.6001,3603.3999,3604.2000,3605.2000,3606.0000,3607.0000,3608.0000,
3609.0000,3609.8000,3610.8000,3611.8000,3612.8000,3613.6001,3614.6001,3615.3999,3616.2000,3617.0000,3617.8000,3618.2000,3619.0000,3619.8000,3620.0000,
3620.8000,3621.6001,3622.0000,3622.8000,3623.6001,3624.0000,3624.8000,3625.6001,3626.0000,3626.8000,3627.6001,3628.0000,3628.8000,3629.3999,3630.0000,
3630.8000,3631.3999,3632.0000,3632.8000,3633.3999,3634.0000,3634.8000,3635.2000,3636.0000,3636.8000,3637.2000,3638.0000,3638.8000,3639.0000,3639.8000,
3640.6001,3641.0000,3641.8000,3642.6001,3643.0000,3643.8000,3644.3999,3645.0000,3645.8000,3646.2000,3647.0000,3647.8000,3648.2000,3649.0000,3649.8000,
3650.8000,3651.2000,3652.0000,3652.8000,3653.8000,3654.3999,3655.0000,3655.8000,3656.8000,3657.3999,3658.0000,3659.0000,3659.8000,3660.3999,3661.0000,
3662.0000,3662.8000,3663.3999,3664.0000,3664.8000,3665.6001,3666.0000,3666.8000,3667.3999,3668.0000,3668.8000,3669.2000,3670.0000,3670.8000,3671.0000,
3671.8000,3672.6001,3673.0000,3673.8000,3674.3999,3675.0000,3675.8000,3676.2000,3677.0000,3677.8000,3678.2000,3678.8000,3679.6001,3680.0000,3680.8000,
3681.6001,3682.0000,3682.8000,3683.3999,3684.0000,3684.8000,3685.3999,3686.0000,3686.8000,3687.2000,3688.0000,3688.8000,3689.2000,3690.0000,3690.8000,
3691.0000,3691.8000,3692.6001,3693.0000,3693.8000,3694.6001,3695.0000,3695.8000,3696.8000,3697.6001,3698.3999,3699.2000,3700.2000,3701.0000,3702.0000,
3703.0000,3704.0000,3705.0000,3705.8000,3706.8000,3707.8000,3708.8000,3709.8000,3710.6001,3711.3999,3712.2000,3712.8000,3713.2000,3713.8000,3714.2000,
3714.8000,3715.2000,3715.8000,3716.2000,3716.8000,3717.2000,3717.8000,3718.2000,3718.8000,3719.2000,3719.8000,3720.2000,3720.8000,3721.2000,3721.8000,
3722.2000,3722.8000,3723.2000,3723.8000,3724.2000,3724.8000,3725.2000,3725.8000,3726.2000,3726.8000,3727.2000,3727.8000,3728.2000,3728.8000,3729.6001,
3730.0000,3730.8000,3731.2000,3732.0000,3732.8000,3733.0000,3733.8000,3734.3999,3735.0000,3735.8000,3736.2000,3736.8000,3737.6001,3738.0000,3738.8000,
3739.2000,3740.0000,3740.8000,3741.0000,3741.8000,3742.3999,3743.0000,3743.8000,3744.0000,3745.0000,3745.8000,3746.6001,3747.2000,3748.0000,3748.8000,
3749.8000,3750.2000,3751.0000,3751.8000,3752.8000,3753.3999,3754.0000,3754.8000,3755.8000,3756.3999,3757.0000,3758.0000,3758.8000,3759.3999,3760.0000,
3761.0000,3761.8000,3762.6001,3763.2000,3764.0000,3764.8000,3765.8000,3766.3999,3767.0000,3768.0000,3768.8000,3769.6001,3770.2000,3771.0000,3771.8000,
3772.8000,3773.3999,3774.0000,3774.8000,3775.8000,3776.3999,3776.8000,3777.3999,3778.0000,3778.3999,3779.0000,3779.6001,3780.0000,3780.6001,3781.0000,
3781.8000,3782.0000,3782.8000,3783.0000,3783.8000,3784.0000,3784.8000,3785.0000,3785.8000,3786.0000,3786.8000,3787.2000,3787.8000,3788.2000,3788.8000,
3789.3999,3789.8000,3790.3999,3791.0000,3791.3999,3792.0000,3792.3999,3793.0000,3793.3999,3793.8000,3794.2000,3794.8000,3795.2000,3795.8000,3796.0000,
3796.8000,3797.0000,3797.8000,3798.0000,3798.6001,3799.0000,3799.6001,3800.0000,3800.3999,3800.8000,3801.3999,3801.8000,3802.2000,3802.8000,3803.0000,
3803.8000,3804.0000,3804.8000,3805.0000,3805.8000,3806.0000,3806.6001,3807.0000,3807.6001,3808.0000,3808.6001,3809.0000,3810.0000,3810.8000,3811.3999,
3812.0000,3812.8000,3813.6001,3814.0000,3815.0000,3815.8000,3816.3999,3817.0000,3817.8000,3818.6001,3819.0000,3820.0000,3820.8000,3821.3999,3822.0000,
3822.8000,3823.6001,3824.0000,3824.8000,3825.0000,3825.6001,3825.8000,3826.2000,3826.8000,3827.0000,3827.6001,3828.0000,3828.2000,3828.8000,3829.0000,
3829.8000,3830.0000,3830.3999,3830.8000,3831.0000,3831.8000,3832.0000,3832.3999,3832.8000,3833.0000,3833.8000,3834.0000,3834.6001,3834.8000,3835.2000,
3835.8000,3836.0000,3836.6001,3837.0000,3837.2000,3837.8000,3838.0000,3838.8000,3839.0000,3839.3999,3839.8000,3840.0000,3841.6001,3842.8000,3844.0000,
3845.2000,3846.8000,3847.8000,3849.0000,3850.6001,3851.8000,3853.0000,3854.2000,3855.8000,3856.6001,3857.0000,3857.8000,3858.2000,3859.0000,3859.6001,
3860.0000,3860.8000,3861.3999,3862.0000,3862.8000,3863.0000,3863.8000,3864.3999,3865.0000,3865.8000,3866.0000,3866.8000,3867.3999,3868.0000,3868.8000,
3869.0000,3869.8000,3870.3999,3871.0000,3871.8000,3872.0000,3872.8000,3873.3999,3874.0000,3874.8000,3875.0000,3875.8000,3876.2000,3876.8000,3877.6001,
3878.0000,3878.8000,3879.0000,3879.8000,3880.3999,3881.0000,3881.6001,3882.0000,3882.8000,3883.2000,3883.8000,3884.3999,3885.0000,3885.8000,3886.0000,
3886.8000,3887.2000,3888.0000,3888.6001,3889.0000,3889.8000,3890.0000,3890.8000,3891.2000,3891.8000,3892.3999,3893.0000,3893.6001,3894.0000,3894.8000,
3895.0000,3895.8000,3896.0000,3896.8000,3897.2000,3897.8000,3898.3999,3899.0000,3899.6001,3900.0000,3900.8000,3901.0000,3901.8000,3902.2000,3902.8000,
3903.3999,3904.0000,3904.3999,3904.8000,3905.0000,3905.8000,3906.0000,3906.3999,3906.8000,3907.0000,3907.8000,3908.0000,3908.3999,3908.8000,3909.0000,
3909.8000,3910.0000,3910.3999,3910.8000,3911.0000,3911.8000,3912.0000,3912.3999,3912.8000,3913.2000,3913.8000,3914.0000,3914.6001,3914.8000,3915.2000,
3915.8000,3916.0000,3916.6001,3916.8000,3917.2000,3917.8000,3918.0000,3918.6001,3918.8000,3919.2000,3919.8000,3920.0000,3921.0000,3922.0000,3923.0000,
3924.0000,3925.2000,3926.2000,3927.3999,3928.6001,3929.8000,3930.8000,3931.8000,3932.8000,3933.8000,3935.0000,3936.0000,3936.8000,3937.0000,3937.8000,
3938.0000,3938.8000,3939.0000,3939.6001,3940.0000,3940.6001,3941.0000,3941.6001,3942.0000,3942.6001,3943.0000,3943.3999,3944.0000,3944.3999,3944.8000,
3945.3999,3945.8000,3946.3999,3946.8000,3947.2000,3947.8000,3948.2000,3948.8000,3949.2000,3949.8000,3950.0000,3950.8000,3951.0000,3951.8000,3952.0000,
3952.8000,3953.0000,3953.8000,3954.0000,3954.8000,3955.0000,3955.8000,3956.0000,3956.8000,3957.0000,3957.6001,3958.0000,3958.6001,3959.0000,3959.6001,
3960.0000,3960.3999,3961.0000,3961.3999,3961.8000,3962.3999,3962.8000,3963.2000,3963.8000,3964.2000,3964.8000,3965.2000,3965.8000,3966.2000,3966.8000,
3967.0000,3967.8000,3968.0000,3968.8000,3969.8000,3970.0000,3971.0000,3971.8000,3972.2000,3973.0000,3973.8000,3974.2000,3975.0000,3975.8000,3976.2000,
3977.0000,3977.8000,3978.3999,3979.0000,3979.8000,3980.3999,3981.0000,3981.8000,3982.3999,3983.0000,3983.8000,3984.3999,3984.8000,3985.2000,3985.8000,
3986.0000,3986.8000,3987.0000,3987.8000,3988.0000,3988.8000,3989.0000,3989.6001,3990.0000,3990.6001,3991.0000,3991.3999,3991.8000,3992.2000,3992.8000,
3993.2000,3993.8000,3994.0000,3994.8000,3995.0000,3995.8000,3996.0000,3996.8000,3997.0000,3997.6001,3998.0000,3998.3999,3999.0000,3999.3999,3999.8000,
4000.3999,4001.0000,4002.0000,4003.0000,4003.8000,4004.8000,4005.3999,4006.2000,4007.0000,4008.0000,4008.8000,4009.8000,4010.6001,4011.2000,4012.0000,
4013.0000,4013.8000,4014.8000,4015.6001,4016.2000,4017.0000,4017.8000,4018.3999,4019.0000,4019.8000,4020.3999,4021.0000,4021.8000,4022.6001,4023.0000,
4023.8000,4024.6001,4025.0000,4025.8000,4026.6001,4027.0000,4027.8000,4028.8000,4029.2000,4030.0000,4030.8000,4031.2000,4032.0000,4037.3999,4045.00
};


/////////ESPCLOCK////
hw_timer_t *timer = NULL;
volatile int time_index = 0;

void IRAM_ATTR onTimer() {
  time_index++;
}
////////TIMER CONSTANTS////////
int PIDTIME = 10000;     //100 Hz, should probaly be 1000 for 1000Hz, or 100 for 10000Hz
int SENSORTIME = 10000;  // for updating sensor moving average
unsigned long current_time = 0;
unsigned long oldtime = 0;   // for old school timing
unsigned long oldtime2 = 0;  //has to be ammended




void setup() {
  // Serial for debugging
  Serial.begin(460800);

  // Communication with ESP module running WiFi
  Serial2.begin(460800, SERIAL_8N1, 16, 17);

  //This is for setting up the PWM genretaion
  // The direction output


  for (int i = 0; i < 5; i++) {

    pinMode(R_EN[i], OUTPUT);
    pinMode(L_EN[i], OUTPUT);
    pinMode(PWMPINR[i], OUTPUT);
    pinMode(PWMPINL[i], OUTPUT);


    // Configuration of channel 0 with the chosen frequency and resolution
    ledcSetup(PWMCHNR[i], frequence, resolution);
    ledcSetup(PWMCHNL[i], frequence, resolution);

    // Assigns the PWM channel to pin
    ledcAttachPin(PWMPINR[i], PWMCHNR[i]);
    ledcAttachPin(PWMPINL[i], PWMCHNL[i]);
  }







  // Initialize the hardware timer
  timer = timerBegin(0, 80, true);              // timer 0, prescaler 80, count up
  timerAttachInterrupt(timer, &onTimer, true);  // attach the interrupt handler
  timerAlarmWrite(timer, 800000, true);         // 10,000 microseconds = 10 milliseconds, I devide with 800000 because clock speed is 80MHz, should be 100Hz
  timerAlarmEnable(timer);                      // enable the alarm
}



void loop() {
  current_time = micros();

  // read from wifi
  if (current_time >= last_wifi_sampling_time + wifi_sampling_interval && Serial2.available()) {
    //Serial.print("WiFi sampling frequency: ");
    //Serial.print(1000000 / (float(current_time) - float(last_wifi_sampling_time)), 3);
    //Serial.println(" Hz");
    last_wifi_sampling_time = current_time;

    // Read serial for new motor forces
    Serial2.readBytes(byteArray, sizeof(byteArray));

    // Decode data
    memcpy(receivedArray, byteArray, sizeof(receivedArray));

    for (int i = 0; i < buffer_size; i++) {
      int sub_array_index = i % 5;
      int sub_array_element_index = i / 5;
      desired_trajectory[sub_array_index][sub_array_element_index] = receivedArray[i];
    }
    for (int i = buffer_size; i < 2 * buffer_size; i++) {
      int sub_array_index = i % 5;
      int sub_array_element_index = (i - buffer_size) / 5;
      desired_wire_vel[sub_array_index][sub_array_element_index] = receivedArray[i];
    }
    /*
    Serial.println("Received data: ");
    for (int j = 0; j < trajectory_size; j++){
      for (int i = 0; i < 5; i++){
        Serial.print(receivedArray[i+j*5], 2);
        Serial.print("\t");
        Serial.print(receivedArray[i+int(trajectory_size*5)+j*5], 6);
        Serial.print("\t");
      }
      Serial.println();
    }
    */
  }


  if (time_index >= trajectory_size) {  // This is the interrupt service checker,  should change every 100Hz

    time_index = 0;  // reset the counter
  }


  if ((micros() - oldtime) > SENSORTIME) {  // old school timing at 1000 Hz

    if (DEV == 0) {
      for (int i = 0; i < 5; i++) {
        detected_current[i] = read_sensor(i);  // reads the sensor input, undone :/
      }
    } else {

      detected_current[test_motor_n] = read_sensor(test_motor_n);  // reads the sensor input, undone :/
    }

    oldtime = micros();
  }

  if (current_time >= oldtime2 + PIDTIME) {  // loop for pid update currently at 100Hz

    if (DEV == 0) {
      for (int i = 0; i < 5; i++) {

        motor_loop(desired_trajectory[i][time_index], desired_wire_vel[i][time_index], detected_current[i], i, pid_current);
      }
    } else {
      wn = serial_parser();

      motor_loop(wn, detected_current[test_motor_n], 0, test_motor_n, pid_current);
    }


    //Serial.print("Sampling frequency:");
    //Serial.println(1000000/(float(current_time)-float(oldtime2)), 3);
    oldtime2 = current_time + PIDTIME;  //KINDA SCUFFED I KNOW
    if (DEV == 1) {
      if (print_Counter >= 1) {
        /////Sensor current//////
        print_Counter = 1;
        for (int i = 0; i < 5; i++) {
          Serial.print("Des");
          Serial.print(i+1);
          Serial.print(": ");
          Serial.print(Print_desired_current[i], 3);
          Serial.print("\t");
          Serial.print("PID");
          Serial.print(i+1);
          Serial.print(": ");
          Serial.print(pid_current[i], 3);
          Serial.print("\t");
          Serial.print("Sen");
          Serial.print(i+1);
          Serial.print(": ");
          Serial.print(detected_current[i], 3);
          Serial.print("\t");
        }
        Serial.println();
      }
      print_Counter++;
    }
  }

  //end of loop
}



float read_sensor(int Motor_Number) {

  const int CUTOFFCUR = 1;                       // the current in amps cutting off detection
  const float SENSITIVTYFACTOR = 40.0 / 1000.0;  // specified in data sheet in 40 mV/A
  const float QOUTVOLT = 1.5261;                 //3.3 / 2;     //1.5261; this is the measured QV    // quintasentive voltage, factor on vcc 5V for output at 0 current
  float cut_off = SENSITIVTYFACTOR / CUTOFFCUR;

  float raw_vol = (3.3 / 4095) * ADC_LUT[(analogRead(CURSENS[Motor_Number]))];  // ESP32 ADC is nonlinear, is tuned with facor and scalar -340 *1.35
  //float raw_vol = (3.3 / 4095) * ((analogRead(CURSENS[Motor_Number]) - 300) * 1.35);
  
  float volt_sens = raw_vol - QOUTVOLT;  // + 0.007;  // idk know what 0.007 is, to not make voltage zero at no current??

  float sensor_cur = volt_sens / SENSITIVTYFACTOR;  // Actual current

  sampleArray[Motor_Number][currentIndex[Motor_Number]] = sensor_cur;

  // increment the current index, or reset it to 0 if it reaches the end of the array
  currentIndex[Motor_Number]++;
  if (currentIndex[Motor_Number] >= numSamples) {
    currentIndex[Motor_Number] = 0;
  }

  // calculate the moving average
  float sum = 0;
  for (int i = 0; i < numSamples; i++) {
    sum += sampleArray[Motor_Number][i];
  }
  moving_avg_cur[Motor_Number] = sum / numSamples;


  return moving_avg_cur[Motor_Number];
}




// This controller gets a desired torque and current current and outputs a corrected current
/////////////////////////////////////////////////////////////////
void motor_loop(float Desired_Trajectory, float Velocety_Trajectory, float Detected_Current, int Motor_Number, float* pidCurrent) {

  //// Desired_Trajectory Velocety_Trajectory Owerflow checker
  if (DEV == 0) {
    if (((Desired_Trajectory > 10000.0) || (Velocety_Trajectory > 10000.0)) || ((Desired_Trajectory < -10000.0) || (Velocety_Trajectory < -10000.0))) {
      Desired_Trajectory = last_desired_trajectory;
      Velocety_Trajectory = last_velocety_trajectory;
    }
    last_desired_trajectory = Desired_Trajectory;
    last_velocety_trajectory = Velocety_Trajectory;

    //Check if velocety has negative sign
    if (Velocety_Trajectory > -1e-9){//10e-8) {  //Torque, This statement is for backwards reeling at low torques
                                                 // IT is send with value 400?, in desired_trajectory when wire lengths has to increase.

      float desired_current = (420 / kt) * kh;  // SKIFT DEN UD SÅ DEN PASSER -insert line speed constant
      if (Motor_Number == 4) {
        desired_current = desired_current + ((200 / kt) * kh);
      }


      //PWMGNRTR
      float cur_frac = (desired_current / kh) / max_cur;
      int(duty_cycle) = floor((cur_frac * max_out_pwm) + 0.5);

      //-11,69 amps, to -39 bits
      digitalWrite(R_EN[Motor_Number], HIGH);
      digitalWrite(L_EN[Motor_Number], HIGH);
      ledcWrite(PWMCHNR[Motor_Number], 0);
      ledcWrite(PWMCHNL[Motor_Number], abs(duty_cycle));


      // this is for resetting the PID controller
      last_error[Motor_Number] = 0;
      integral[Motor_Number] = 0;
      /*
    if (DEBUG == 1) {
      Serial.print("Negative Stall = -11.68 ");
      Serial.print(",  to Motor N: ");
      Serial.println(Motor_Number + 1);
    }
    */
      return;
    }
  }

  //MAKE CURRENT
  float desired_current = (Desired_Trajectory / kt) * kh;
  Print_desired_current[Motor_Number] = desired_current;




  /*
  if (DEBUG == 1) {
    Serial.print("Desired current = ");
    Serial.print(desired_current);
    Serial.print(",  to Motor N: ");
    Serial.println(Motor_Number + 1);
    Serial.println();
    */
  
  ///PID
  /*
  float error = desired_current - Detected_Current;
  integral[Motor_Number] += error;
  float derivative = error - last_error[Motor_Number];
  last_error[Motor_Number] = error;
  float out_cur = Kp * error + Ki * integral[Motor_Number] + Kd * derivative;
*/
  


 float error = desired_current - Detected_Current;
  integral[Motor_Number] += error;
  // Limit the integral term
  float max_integral = 100.0;
  float min_integral = -100.0;
  integral[Motor_Number] = constrain(integral[Motor_Number], min_integral, max_integral);

  float derivative = error - last_error[Motor_Number];
  // Apply a low-pass filter to the derivative term
  float filtered_derivative = (1 - Kn) * filtered_derivative + Kn * derivative;


  last_error[Motor_Number] = error;
  float out_cur = Kp * error + Ki * integral[Motor_Number] + Kd * filtered_derivative;
  out_cur = constrain(out_cur, -max_cur, max_cur);

  pidCurrent[Motor_Number] = out_cur;

  //float out_cur = desired_current;
/*
  if (DEBUG == 1) {
    Serial.print("PID output      = ");
    Serial.print(out_cur);
    Serial.print(",  to Motor N: ");
    Serial.println(Motor_Number);
  }
*/
  ////
  //PWMGNRTR
  float cur_frac = (out_cur / kh) / max_cur;
  int(duty_cycle) = floor((cur_frac * max_out_pwm) + 0.5);


  ///ANALOGWRITE
  if (duty_cycle > pwm_limit) {
    duty_cycle = pwm_limit;
  } else if (duty_cycle < -pwm_limit) {
    duty_cycle = -pwm_limit;
  }

  if (duty_cycle > 0) {
    digitalWrite(L_EN[Motor_Number], HIGH);  // changed form HIGH
    digitalWrite(R_EN[Motor_Number], HIGH);
    ledcWrite(PWMCHNL[Motor_Number], 0);  // might be unnesedsary
    ledcWrite(PWMCHNR[Motor_Number], abs(duty_cycle));

    //if (DEBUG == 1) {
    //  Serial.print("SEND positiv DC = ");
    //  Serial.print(duty_cycle);
    //  Serial.print(",   to Motor N: ");
    //  Serial.println(Motor_Number + 1);
    //}


  } else {
    digitalWrite(R_EN[Motor_Number], HIGH);
    digitalWrite(L_EN[Motor_Number], HIGH);
    ledcWrite(PWMCHNR[Motor_Number], 0);
    ledcWrite(PWMCHNL[Motor_Number], abs(duty_cycle));

    //if (DEBUG == 1) {
    //  Serial.print("Send negativ DC = ");
    //  Serial.print(duty_cycle);
    //  Serial.print(",   to Motor N: ");
    //  Serial.println(Motor_Number + 1);
    //}
  }
  /*
  if (DEBUG == 1) {
    Serial.println(" ");
  }*/

  ///END OF LOOP//////
}

/////////////////////////////////////////////////////////////////

//////////SERIAL PARSER//////////////

// Parse the serial input to receive new values for the wn
int serial_parser() {
  static boolean recvInProgress = false;
  static byte ndx = 0;
  char startMarker = '<';
  char endMarker = '>';
  char rc;
  while (Serial.available() > 0 && newData == false) {
    rc = Serial.read();

    if (recvInProgress == true) {
      if (rc != endMarker) {
        receivedChars[ndx] = rc;
        ndx++;
        if (ndx >= numChars) {
          ndx = numChars - 1;
        }
      } else {
        receivedChars[ndx] = '\0';
        recvInProgress = false;
        ndx = 0;
        newData = true;
      }
    } else if (rc == startMarker) {
      recvInProgress = true;
    }
  }

  // If new data is available, update the PID constants with the new values
  if (newData == true) {

    strcpy(tempChars, receivedChars);
    wn = atoi(strtok(tempChars, ","));
    test_motor_n = atoi(strtok(NULL, ",")) - 1;


    newData = false;
  }

  return wn;
}